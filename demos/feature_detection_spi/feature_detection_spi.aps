//
//
// This alogrithm apply FAST corner detection algortihm to detect feature
// points in an image. In a single frameloop, the algorithm is applied for 
// two images with different exposure time to achieve HDR-equivalent result. 
//
//
//------------------------------------------------------------------------------


apron.config_begin
    host.set_frame_rate(100)
    window_1 = host.add_display('Captured')
    window_2 = host.add_display('Processed')
    slider_0 = host.add_slider('threshold', 0, 100, 45, SPI_APP_TEXT_THRESHOLD_A)
//     host.record_display(window_2,'snapshots/dout_',50)
apron.config_end


//------------------------------------------------------------------------------


ipu.reset_loop_counter

spi.reset

spi.set_transfer_size(768)

ipu.delay_50us_x(250)

_jump(#start)
_nop

!include('Lib_FAST16.aps')


//------------------------------------------------------------------------------


#image_processing_take_C_return_R5
    _nop

    R12 = 0
    R11 = 0
    R10 = 0
    
    // dark foreground bright background
    
    s0 = usb.slider(slider_0)
    E = in(s0)
    A = add(C,E)
    _call(#algorithm_FAST16_R9)
    _nop
    
    R10 = R9
    
    // bright foreground dark background
    
    E = neg(C)
    C = copy(E)
    
    s0 = usb.slider(slider_0)
    E = in(s0)
    A = add(C,E)
    _call(#algorithm_FAST16_R9)
    _nop
    
    // merge the two
    
    R5 = or(R9,R10)
    
    E = neg(C)
    C = copy(E)
    
_ret


//------------------------------------------------------------------------------


#start

    // Exposure Stage 1 (long)
    //--------------------------------
    
    ipu.wait_frame_trigger
    rpix(A,C)
    
    B = in(-128)
    
    _call(#image_processing_take_C_return_R5)
    _nop
    where(R5)
        B = in(127)
    all
    
    
    // Exposure Stage 2 (short)
    //--------------------------------
    
    rpix
    ipu.delay_50us_x(20)// 1 millisecond
    rpix(A,C)
    
    _call(#image_processing_take_C_return_R5)
    _nop
    where(R5)
        B = in(127)
    all
    
    
    // Blob Peeling
    //--------------------------------

    
    // retrieve binary result
    where(B)
    R5 = FLAG
    all
    
    _call(#algorithm_erosion_R5)
    _nop
    
    pe.refresh(R5)
    
    
    // Event Scanning
    //--------------------------------
    
    ipu.inc_loop_counter
    
    // check if fifo space is more than 768 bytes (the packet size is 652)
    spi.get_fifo_space(s0)
    _sub(s0,SPI_FIFO_SPACE_768)
    _jump(c,#skip_spi)
    
    // scan and send all coordinates
    spi.begin
    
    spi.scan_events(R5,350)
    
    spi.end
    
    #skip_spi
    _nop

_jump(#start)


//------------------------------------------------------------------------------


apron.genereate_host
apron.compile_host
