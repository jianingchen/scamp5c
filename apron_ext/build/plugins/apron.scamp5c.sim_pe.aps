
/// PE Instructions
//------------------------------------------------------------------------------

//
!macro_def
    where($r1)
!macro_begin
    mask.off
    core.load(FLAG, 0.0)
    x[apron_mask] = mask.if($r1, >, 0)
    mask.on(x[apron_mask])
    core.load(FLAG, 1)
!macro_end

//
!macro_def
    all
!macro_begin
    mask.off
    core.load(FLAG, 1.0)
!macro_end

//
!macro_def
    setf
!macro_begin
    mask.off
    core.load(FLAG, 1.0)
!macro_end

//
!macro_def
    respix
!macro_begin
    s5c_sim_respix
!macro_end

//
!macro_def
    res($r1)
!macro_begin
    s5c_sim_res($r1)
!macro_end

//
!macro_def
    $r1 = not($r2)
!macro_begin
    $r1 = s5c_sim_not($r2)
!macro_end

//
!macro_def
    $r1 = or($r2,$r3)
!macro_begin
    $r1 = s5c_sim_or($r2,$r3)
!macro_end

//
!macro_def
    $r1 = nor($r2,$r3)
!macro_begin
    $r1 = s5c_sim_nor($r2,$r3)
!macro_end




/// PE Macros
//------------------------------------------------------------------------------

//
!macro_def
    $a = pe.in($p)
!macro_begin
    s5c_sim_in(IN,$p)
    $a = s5c_sim_load(IN)
!macro_end

// $r1 will be a half-toned image, $r2 will be a full range image
!macro_def
    pe.rpix($r1,$r2)
!macro_begin
    if(sim_pix_source,==,1)
        PIX_IMAGE = webcam.getLuminance(0)
    endif
    if(sim_pix_source,==,2)
        // static image, not changing
    endif
    if(sim_pix_source,==,3)
        video.clip.frame(PIX_IMAGE)
    endif
    core.mul(PIX,PIX_IMAGE,0.495)
    core.sub(PIX,PIX,127.0)
    $r1 = s5c_sim_load(PIX)
    F = s5c_sim_load(PIX)
    respix
    $r2 = s5c_sim_add3($r1,F,PIX)
    $r1 = s5c_sim_add(F,PIX)
!macro_end

//
!macro_def
    pe.rpix
!macro_begin
    respix
!macro_end

//
!macro_def
    $r1 = pe.copy($r2)
!macro_begin
    F = s5c_sim_load($r2)
    $r1 = s5c_sim_load(F)
!macro_end

//
!macro_def
    $r1 = pe.add($r2,$r3)
!macro_begin
    F = s5c_sim_add($r2,$r3)
    $r1 = s5c_sim_load(F)
!macro_end

//
!macro_def
    pe.add($r2,$r3)
!macro_begin
    F = s5c_sim_add($r2,$r3)
    $r2 = s5c_sim_load(F)
!macro_end

//
!macro_def
    $r1 = pe.sub($r2,$r3)
!macro_begin
    F = s5c_sim_load($r2)
    $r1 = s5c_sim_add(F,$r3)
!macro_end

//
!macro_def
    pe.sub($r2,$r3)
!macro_begin
    F = s5c_sim_load($r2)
    $r2 = s5c_sim_add(F,$r3)
!macro_end

//
!macro_def
    $r1 = pe.neg($r2)
!macro_begin
    F = s5c_sim_load(0)
    $r1 = s5c_sim_add($r2,F)
!macro_end

//
!macro_def
    $r1 = pe.abs($r2)
!macro_begin
    $r1 = s5c_sim_load($r2)
    F = s5c_sim_load($r2)
    where($r2)
        $r1 = s5c_sim_load(F)
    all
!macro_end

//
!macro_def
    pe.div($r1,$r2,$r3)
!macro_begin
    s5c_sim_div($r1,F,$r3)
    $r2 = s5c_sim_load(F)
!macro_end

//
!macro_def
    $r1 = pe.north($r2)
!macro_begin
    NEWS = s5c_sim_load($r2)
    $r1 = s5c_sim_load(NORTH)
!macro_end

//
!macro_def
    $r1 = pe.east($r2)
!macro_begin
    NEWS = s5c_sim_load($r2)
    $r1 = s5c_sim_load(EAST)
!macro_end

//
!macro_def
    $r1 = pe.west($r2)
!macro_begin
    NEWS = s5c_sim_load($r2)
    $r1 = s5c_sim_load(WEST)
!macro_end

//
!macro_def
    $r1 = pe.south($r2)
!macro_begin
    NEWS = s5c_sim_load($r2)
    $r1 = s5c_sim_load(SOUTH)
!macro_end

//
!macro_def
    $r1 = pe.not($r2)
!macro_begin
    $r1 = not($r2)
!macro_end

//
!macro_def
    $r1 = pe.or($r2,$r3)
!macro_begin
    $r1 = or($r2,$r3)
!macro_end

//
!macro_def
    $r1 = pe.nor($r2,$r3)
!macro_begin
    $r1 = nor($r2,$r3)
!macro_end

//
!macro_def
    $r1 = pe.and($r2,$r3)
!macro_begin
    R0 = not($r2) //invert both inputs
    $r2 = not($r3)
    $r1 = nor(R0,$r2)
    $r2 = not(R0) //re-instating R$r2
!macro_end

//
!macro_def
    $r1 = pe.nand($r2,$r3)
!macro_begin
    R0 = not($r2) //invert both inputs
    $r2 = not($r3) 
    $r1 = or(R0,$r2)
    $r2 = not(R0) //re-instating R$r2
!macro_end

//
!macro_def
    $r1 = pe.d2a($r2)
!macro_begin
    s5c_sim_mov($r1,$r2)
    core.mul($r1,$r1,254.0)
    core.sub($r1,$r1,127.0)
!macro_end

// 
!macro_def
    $r1 = pe.a2d($r2)
!macro_begin
    where($r2)
    s5c_sim_mov($r1,FLAG)
    all
!macro_end

//
!macro_def
    $r1 = pro.digital_news($r2,$p3,$p4,$p5,$p6)
!macro_begin
    $r1 = s5c_sim_dnews($r2,$p3,$p4,$p5,$p6)
!macro_end

//
!macro_def
    $r1 = pro.flood_from_boundary($r2)
!macro_begin
    s5c_sim_flood_boundary($r1,$r2)
!macro_end

//
!macro_def
    $r1 = pro.flood_from_source($r2,$r3)
!macro_begin
    s5c_sim_flood_source($r1,$r2,$r3)
!macro_end

//
!macro_def
    $r1 = pro.diffuse($r2,$p1,$p2)
!macro_begin
    s5c_sim_diffuse($r1,$r2,$p1,$p2)
!macro_end

//
!macro_def
    pro.locate_event($p1,$p2,$p3)
!macro_begin
    s5c_sim_locate_event($p1,$p2,$p3)
!macro_end


// Alternative Name
//------------------------------------------------------------------------------

//
!macro_def
    rpix($r1,$r2)
!macro_begin
    pe.rpix($r1,$r2)
!macro_end

//
!macro_def
    rpix
!macro_begin
    pe.rpix
!macro_end

//
!macro_def
    $a = in($p)
!macro_begin
    $a = pe.in($p)
!macro_end

//
!macro_def
    $r1 = copy($r2)
!macro_begin
    $r1 = pe.copy($r2)
!macro_end

//
!macro_def
    $r1 = add($r2,$r3)
!macro_begin
    $r1 = pe.add($r2,$r3)
!macro_end

//
!macro_def
    add($r2,$r3)
!macro_begin
    pe.add($r2,$r3)
!macro_end

//
!macro_def
    $r1 = sub($r2,$r3)
!macro_begin
    $r1 = pe.sub($r2,$r3)
!macro_end

//
!macro_def
    sub($r2,$r3)
!macro_begin
    pe.sub($r2,$r3)
!macro_end

//
!macro_def
    div($r1,$r2,$r3)
!macro_begin
    pe.div($r1,$r2,$r3)
!macro_end

//
!macro_def
    $r1 = neg($r2)
!macro_begin
    $r1 = pe.neg($r2)
!macro_end

//
!macro_def
    $r1 = abs($r2)
!macro_begin
    $r1 = pe.abs($r2)
!macro_end

//
!macro_def
    $r1 = north($r2)
!macro_begin
    $r1 = pe.north($r2)
!macro_end

//
!macro_def
    $r1 = east($r2)
!macro_begin
    $r1 = pe.east($r2)
!macro_end

//
!macro_def
    $r1 = west($r2)
!macro_begin
    $r1 = pe.west($r2)
!macro_end

//
!macro_def
    $r1 = south($r2)
!macro_begin
    $r1 = pe.south($r2)
!macro_end

//
!macro_def
    $r1 = and($r2,$r3)
!macro_begin
    $r1 = pe.and($r2,$r3)
!macro_end

//
!macro_def
    $r1 = nand($r2,$r3)
!macro_begin
    $r1 = pe.nand($r2,$r3)
!macro_end


// Deprecated Name
//------------------------------------------------------------------------------

//
!macro_def
    F.rpix
!macro_begin
    pe.rpix
!macro_end

//
!macro_def
    F.rpix($r1,$r2)
!macro_begin
    pe.rpix($r1,$r2)
!macro_end

//
!macro_def
    $a = F.in($p)
!macro_begin
    $a = pe.in($p)
!macro_end

//
!macro_def
    $r1 = F.mov($r2)
!macro_begin
    $r1 = pe.copy($r2)
!macro_end

//
!macro_def
    $r1 = F.add($r2,$r3)
!macro_begin
    $r1 = pe.add($r2,$r3)
!macro_end

//
!macro_def
    F.add($r2,$r3)
!macro_begin
    pe.add($r2,$r3)
!macro_end

//
!macro_def
    $r1 = F.sub($r2,$r3)
!macro_begin
    $r1 = pe.sub($r2,$r3)
!macro_end

//
!macro_def
    F.sub($r2,$r3)
!macro_begin
    pe.sub($r2,$r3)
!macro_end

//
!macro_def
    F.div($r1,$r2,$r3)
!macro_begin
    pe.div($r1,$r2,$r3)
!macro_end

//
!macro_def
    $r1 = F.abs($r2)
!macro_begin
    $r1 = pe.abs($r2)
!macro_end

//
!macro_def
    $r1 = F.neg($r2)
!macro_begin
    $r1 = pe.neg($r2)
!macro_end

//
!macro_def
    $r1 = F.north($r2)
!macro_begin
    $r1 = pe.north($r2)
!macro_end

//
!macro_def
    $r1 = F.east($r2)
!macro_begin
    $r1 = pe.east($r2)
!macro_end

//
!macro_def
    $r1 = F.west($r2)
!macro_begin
    $r1 = pe.west($r2)
!macro_end

//
!macro_def
    $r1 = F.south($r2)
!macro_begin
    $r1 = pe.south($r2)
!macro_end

//
!macro_def
    $r1 = F.d2a($r2)
!macro_begin
    $r1 = pe.d2a($r2)
!macro_end

//
!macro_def
    $r1 = L.not($r2)
!macro_begin
    $r1 = pe.not($r2)
!macro_end

//
!macro_def
    $r1 = L.or($r2,$r3)
!macro_begin
    $r1 = pe.or($r2,$r3)
!macro_end

//
!macro_def
    $r1 = L.nor($r2,$r3)
!macro_begin
    $r1 = pe.nor($r2,$r3)
!macro_end

//
!macro_def
    $r1 = L.and($r2,$r3)
!macro_begin
    $r1 = pe.and($r2,$r3)
!macro_end

//
!macro_def
    $r1 = L.nand($r2,$r3)
!macro_begin
    $r1 = pe.nand($r2,$r3)
!macro_end

//
!macro_def
    $r1 = L.a2d($r2)
!macro_begin
    $r1 = pe.a2d($r2)
!macro_end
