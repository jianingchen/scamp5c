
// SCAMP-5 PE Registers
//------------------------------------------------------------------------------

!object('ar', 'ar', 0, 'SIM_REGISTER')
!object('dr', 'dr', 1, 'SIM_REGISTER')
!object('ipuvar', 'iv', 2, 'SIM_VARIABLE')

!define(AR, 'ar')
!define(DR, 'dr')
!define(IPUVAR, 'ipuvar')

!create('A', AR, 128, 128)// nResourceID == 0
!create('B', AR, 128, 128)
!create('C', AR, 128, 128)
!create('D', AR, 128, 128)
!create('E', AR, 128, 128)
!create('F', AR, 128, 128)
!create('NEWS', AR, 128, 128)// nResourceID == 6
!create('PIX', AR, 128, 128)
!create('IN', AR, 128, 128)
!create('NORTH', AR, 128, 128)// nResourceID == 9
!create('SOUTH', AR, 128, 128)
!create('EAST', AR, 128, 128)
!create('WEST', AR, 128, 128)

!define(A, ar[A])
!define(B, ar[B])
!define(C, ar[C])
!define(D, ar[D])
!define(E, ar[E])
!define(F, ar[F])
!define(NEWS, ar[NEWS])
!define(PIX, ar[PIX])
!define(IN, ar[IN])
!define(NORTH, ar[NORTH])
!define(SOUTH, ar[SOUTH])
!define(WEST, ar[WEST])
!define(EAST, ar[EAST])

!create('R0', DR, 128, 128)// nResourceID == 0
!create('R1', DR, 128, 128)
!create('R2', DR, 128, 128)
!create('R3', DR, 128, 128)
!create('R4', DR, 128, 128)
!create('R5', DR, 128, 128)
!create('R6', DR, 128, 128)
!create('R7', DR, 128, 128)
!create('R8', DR, 128, 128)
!create('R9', DR, 128, 128)
!create('R10', DR, 128, 128)
!create('R11', DR, 128, 128)
!create('R12', DR, 128, 128)
!create('FLAG', DR, 128, 128)// nResourceID == 13

!define(FLAG,dr[FLAG])
!define(RANA,dr[FLAG])
!define(FL,dr[R0])
!define(R0,dr[R0])
!define(R1,dr[R1])
!define(R2,dr[R2])
!define(R3,dr[R3])
!define(R4,dr[R4])
!define(R5,dr[R5])
!define(R6,dr[R6])
!define(R7,dr[R7])
!define(R8,dr[R8])
!define(R9,dr[R9])
!define(R10,dr[R10])
!define(R11,dr[R11])
!define(R12,dr[R12])



// SCAMP-5 ICW Bits
//------------------------------------------------------------------------------

!define(xSELSQ, 0)
!define(xSPIX, 1)
!define(xRPIX, 2)
!define(xSELDIFFE, 3)
!define(xSELDIFFS, 4)
!define(xSIN, 5)
!define(xRANA, 6)
!define(xSELS, 7)
!define(xSELE, 8)
!define(xSELX, 9)
!define(xRID, 10)
!define(xSELN, 11)
!define(xWRF, 12)
!define(xSETF, 13)
!define(xSELW, 14)
!define(xPUPD, 15)
!define(xFLOAT, 16)
!define(xLFL, 17)
!define(xRFL, 18)
!define(xNBIT, 19)
!define(xNB, 20)
!define(xPLWB, 21)
!define(xPLRB, 22)
!define(xBIT, 23)
!define(xBITMODE, 24)
!define(xWR, 25)
!define(xANA, 26)
!define(xDIG8, 27)
!define(xG_START, 28)
!define(xg_STOP, 29)
!define(xCOL_OUT, 30)
!define(xDIR, 31)
!define(xROW_OUT, 32)
!define(xS0_LEFT, 33)
!define(xS1_LEFT, 34)
!define(xRST_START, 35)
!define(xRST_STOP, 36)
!define(xS0_BOT, 37)
!define(xS1_BOT, 38)
!define(xPGDB, 39)
!define(xPGDBOBUS, 40)

!define(xW1, 41)
!define(xW2, 42)
!define(xW3, 43)
!define(xW4, 44)
!define(xW5, 45)
!define(xW6, 45)
!define(xW7, 47)
!define(xSEL1, 48)
!define(xSEL2, 49)
!define(xSEL3, 50)
!define(xSEL4, 51)
!define(xSEL5, 52)
!define(xSEL6, 53)
!define(xSEL7, 54)

//It's for the bits in Macro.	macro(A) will translate to ar[A] in the macro. As a result just define 
//xW1 is not enough. xWar[A] is needed. In normal code (not in a macro), set(xW1) can be used.
!define(xWar[A], 41)
!define(xWar[B], 42)
!define(xWar[C], 43)
!define(xWar[NEWS], 44)
!define(xWar[D], 45)
!define(xWar[E], 45)
!define(xWar[F], 47)
!define(xSELar[A], 48)
!define(xSELar[B], 49)
!define(xSELar[C], 50)
!define(xSELar[NEWS], 51)
!define(xSELar[D], 52)
!define(xSELar[E], 53)
!define(xSELar[F], 54)

!define(xRR1, 55)
!define(xRR2, 56)
!define(xRR3, 57)
!define(xRR4, 58)
!define(xRR5, 59)
!define(xRR6, 60)
!define(xRR7, 61)
!define(xRR8, 62)
!define(xRR9, 63)
!define(xRR10, 64)
!define(xRR11, 65)
!define(xRR12, 66)
!define(xLR1, 67)
!define(xLR2, 68)
!define(xLR3, 69)
!define(xLR4, 70)
!define(xLR5, 71)
!define(xLR6, 72)
!define(xLR7, 73)
!define(xLR8, 74)
!define(xLR9, 75)
!define(xLR10, 76)
!define(xLR11, 77)
!define(xLR12, 78)

//It's for the bits in Macro.	macro(R1) will translate to ar[R1] in the macro. As a result just define 
//xRR1 is not enough. xRdr[R1] is needed. In normal code (not in a macro), set(xW1) can be used.
!define(xRdr[R1], 55)
!define(xRdr[R2], 56)
!define(xRdr[R3], 57)
!define(xRdr[R4], 58)
!define(xRdr[R5], 59)
!define(xRdr[R6], 60)
!define(xRdr[R7], 61)
!define(xRdr[R8], 62)
!define(xRdr[R9], 63)
!define(xRdr[R10], 64)
!define(xRdr[R11], 65)
!define(xRdr[R12], 66)
!define(xLdr[R1], 67)
!define(xLdr[R2], 68)
!define(xLdr[R3], 69)
!define(xLdr[R4], 70)
!define(xLdr[R5], 71)
!define(xLdr[R6], 72)
!define(xLdr[R7], 73)
!define(xLdr[R8], 74)
!define(xLdr[R9], 75)
!define(xLdr[R10], 76)
!define(xLdr[R11], 77)
!define(xLdr[R12], 78)
